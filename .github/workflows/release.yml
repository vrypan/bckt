name: Release builds

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build ${{ matrix.platform.name }}
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - name: linux-x86_64
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            archive: tar.gz
            linker: ""
          - name: linux-arm64
            runner: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            archive: tar.gz
            linker: aarch64-linux-gnu-gcc
          - name: macos-x86_64
            runner: macos-latest
            target: x86_64-apple-darwin
            archive: tar.gz
            linker: ""
          - name: macos-arm64
            runner: macos-14
            target: aarch64-apple-darwin
            archive: tar.gz
            linker: ""
          - name: windows-x86_64
            runner: windows-latest
            target: x86_64-pc-windows-msvc
            archive: zip
            linker: ""

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: Install Linux ARM64 linker
        if: matrix.platform.name == 'linux-arm64'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Configure target linker
        if: matrix.platform.linker != ''
        run: echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=${{ matrix.platform.linker }}" >> $GITHUB_ENV
        shell: bash

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.platform.target }}

      - name: Package artifact
        shell: bash
        run: |
          VERSION="${GITHUB_REF_NAME}"
          TARGET="${{ matrix.platform.target }}"
          BIN="bckt"
          case "${{ runner.os }}" in
            Windows)
              BIN="${BIN}.exe"
              OUT="target/${TARGET}/release/${BIN}"
              ARCHIVE="bckt-${VERSION}-${{ matrix.platform.name }}.zip"
              powershell -Command "Compress-Archive -Path $env:OUT -DestinationPath $env:ARCHIVE"
              ;;
            *)
              OUT="target/${TARGET}/release/${BIN}"
              ARCHIVE="bckt-${VERSION}-${{ matrix.platform.name }}.tar.gz"
              tar -C "$(dirname "${OUT}")" -czf "${ARCHIVE}" "${BIN}"
              ;;
          esac
          echo "ARCHIVE=${ARCHIVE}" >> $GITHUB_ENV

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.name }}
          path: ${{ env.ARCHIVE }}

  release:
    name: Publish GitHub release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/**/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
